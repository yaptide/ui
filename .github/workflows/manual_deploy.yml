name: On-demand deploy (Manual with PR Lookup)

on:
  workflow_dispatch:
    # Removed the branch_name input as GitHub provides a branch selection option

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-web

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read # Required for actions/checkout and reading repo content
      packages: write # Required for pushing to GitHub Packages
      # statuses: write # Keep if needed for external status checks
      # pull-requests: write # Keep if needed for interacting with PRs (not used in current steps)

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get PR Number for Branch
        id: get_pr
        run: |
          # Use gh pr list to find open PRs for the branch that triggered the workflow
          # --state open filters for open PRs
          # --head filters by the head branch name (using github.ref_name)
          # --json number outputs the PR number in JSON format
          PR_NUMBER=$(gh pr list --state open --head ${{ github.ref_name }} --json number | jq '.[0].number')

          # Check if a PR number was successfully retrieved
          if [ "$PR_NUMBER" == "null" ] || [ -z "$PR_NUMBER" ]; then
            echo "::error::No open Pull Request found for branch '${{ github.ref_name }}'."
            echo "Please ensure an open PR exists for this branch before triggering."
            exit 1 # Fail the job if no PR is found
          else
            echo "Found open PR #${PR_NUMBER} for branch '${{ github.ref_name }}'."
            # Set the found PR number as a step output
            echo "pr_number=$PR_NUMBER" >> "$GITHUB_OUTPUT"
          fi
        env:
          # The GITHUB_TOKEN is also needed here for the gh CLI
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Use the PR number obtained from the 'Get PR Number' step output
          tags: |
            type=raw,value=pr-${{ steps.get_pr.outputs.pr_number }}

      # see https://github.com/docker/build-push-action/issues/513#issuecomment-987951050
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          provenance: false
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # it seems that cache is not giving any benefit in speed, lets keep it disabled for now
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=true
            DEPLOYMENT=dev
